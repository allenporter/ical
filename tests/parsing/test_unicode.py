"""Tests for unicode specific handling."""

import pytest

from ical.parsing.unicode import SAFE_CHAR, VALUE_CHAR


def test_safe_char_excludes() -> None:
    """Test that the safe char definition excludes the right set of characters."""
    assert '"' not in SAFE_CHAR
    assert ";" not in SAFE_CHAR
    assert "," not in SAFE_CHAR

    assert "a" in SAFE_CHAR


def test_safe_char() -> None:
    """Test some basic values that should be in safe char."""
    assert "a" in SAFE_CHAR
    assert "-" in SAFE_CHAR
    assert "ðŸŽ„" in SAFE_CHAR


def test_value_char() -> None:
    """Test some basic values that should be in value char."""
    assert "a" in VALUE_CHAR
    assert "-" in VALUE_CHAR
    assert '"' in VALUE_CHAR
    assert ";" in VALUE_CHAR
    assert "," in VALUE_CHAR
    assert "ðŸŽ„" in VALUE_CHAR


@pytest.mark.parametrize(
    "word",
    [
        "Å¾mogus",
        "ä¸­æ–‡",
        "ÐºÐ¸Ñ€Ð¸Ð»Ð»Ð¸Ñ†Ð°",
        "Î•Î»Î»Î·Î½Î¹ÎºÎ¬",
        "×¢Ö´×‘×¨Ö´×™×ª",
        "æ—¥æœ¬èªž",
        "í•œêµ­ì–´",
        "à¹„à¸—à¸¢",
        "à¤¦à¥‡à¤µà¤¨à¤¾à¤—à¤°à¥€",
    ],
)
def test_languages(word: str) -> None:
    """Test basic values in non-english character sets are valid."""
    for char in word:
        assert char in VALUE_CHAR
